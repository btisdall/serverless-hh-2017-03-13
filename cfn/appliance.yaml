---
AWSTemplateFormatVersion: '2010-09-09'

Description: Enterprisey Security Appliance

Parameters:
  VpcId:
    Description: VPC ID
    Type: String
    Default: vpc-65a71b00
  IgwId:
    Description: Internet gw
    Type: String
    Default: igw-05a27160
  KeyName:
    Description: SSH key
    Type: String
    Default: bentis_sandbox
  Az:
    Description: Availability zone
    Type: String
    Default: eu-west-1a
  ServiceUrl:
    Description: Registration API URL
    Type: String

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enterprisey Security Appliance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - CidrIp: 31.19.119.178/32
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
      - CidrIp: 31.19.119.178/32
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
      Tags:
      - Key: Name
        Value: alertlogic_threat_manager
      - Key: Department
        Value: web
      - Key: Project
        Value: babel

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone: !Ref Az
      CidrBlock: 172.31.48.0/28
      Tags:
      - Key: Name
        Value: alertlogic_threat_manager
      - Key: Department
        Value: web
      - Key: Project
        Value: babel

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: alertlogic_threat_manager
      - Key: Department
        Value: web
      - Key: Project
        Value: babel

  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IgwId
      RouteTableId: !Ref RouteTable

  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-81f8d4e7
      InstanceType: t2.micro
      AssociatePublicIpAddress: true
      KeyName: !Ref KeyName
      SecurityGroups:
      - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash
          exec >/var/log/bootstrap.log 2>&1
          set -ex
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get -y install nginx git
          git -C /tmp clone https://github.com/btisdall/serverless-hh-2017-03-13.git
          cp /tmp/serverless-hh-2017-03-13/nginx/html/* /var/www/html/
          sed -i "s!%%CLAIM_URL%%!${ServiceUrl}!" /var/www/html/index.html
          sed -i "s!%%INSTANCE_ID%%!$(ec2metadata --instance-id)!" /var/www/html/index.html

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 1
      MaxSize: 1
      VPCZoneIdentifier:
      - !Ref Subnet
      Tags:
      - Key: Name
        Value: alertlogic_threat_manager
        PropagateAtLaunch: true
      - Key: Department
        Value: web
        PropagateAtLaunch: true
      - Key: Project
        Value: babel
        PropagateAtLaunch: true
